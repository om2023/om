#include<iostream>
#include<math.h>
#include<graphics.h>
#include<cstdlib>
using namespace std;
void translation(int x1,int y1,int x2,int y2,int x3,int y3,int tx,int ty)
{
int tx1=x1+tx;
int ty1=y1+ty;
int tx2=x2+tx;
int ty2=y2+ty;
int tx3=x3+tx;
int ty3=y3+ty;
line(tx1,ty1,tx2,ty2);
line(tx2,ty2,tx3,ty3);
line(tx3,ty3,tx1,ty1);
}
void rotation(int x1,int y1,int x2,int y2,int x3,int y3,float r)
{
float t=(3.14*r)/180;
float rx1=(x1*cos(t))-(y1*sin(t));
float ry1=(x1*sin(t))+(y1*cos(t));
float rx2=(x2*cos(t))-(y2*sin(t));
float ry2=(x2*sin(t))+(y2*cos(t));
float rx3=(x3*cos(t))-(y3*sin(t));
float ry3=(x3*sin(t))+(y3*cos(t));
line(rx1,ry1,rx2,ry2);
line(rx2,ry2,rx3,ry3);
line(rx3,ry3,rx1,ry1);
}
void scaling(int x1,int y1,int x2,int y2,int x3,int y3,int sx,int sy)
{
int sx1=x1*sx;
int sy1=y1*sy;
int sx2=x2*sx;
int sy2=y2*sy;
int sx3=x3*sx;
int sy3=y3*sy;
line(sx1,sy1,sx2,sy2);
line(sx2,sy2,sx3,sy3);
line(sx3,sy3,sx1,sy1);
}
int main()
{
int x1,y1,x2,y2,x3,y3;\
int tx,ty;
cout<<"\n Enter co ordinates of triangle:";
cin>>x1>>y1>>x2>>y2>>x3>>y3;
cout<<"\nEnter value of translation vector :";
cin>>tx>>ty;
float r;
cout<<"\nEnter value of angle :";
cin>>r;
int sx,sy;
cout<<"\nEnter value of scaling vector :";
cin>>sx>>sy;
int gd=DETECT,gm;
initgraph(&gd,&gm,NULL);
line(x1,y1,x2,y2);
line(x2,y2,x3,y3);
line(x3,y3,x1,y1);
cleardevice();
cout<<"Performing translation...";
translation(x1,y1,x2,y2,x3,y3,tx,ty);
delay(5000);
cleardevice();
cout<<"Performing rotation..."
;
rotation(x1,y1,x2,y2,x3,y3,r);
delay(5000);
cleardevice();
cout<<"Performing scaling..."
;
scaling(x1,y1,x2,y2,x3,y3,sx,sy);
delay(5000);
cleardevice();
closegraph();
return 0;
}